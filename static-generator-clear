#!/usr/bin/env node

const SOURCE_DIR_PATH = '_src'
const OUTPUT_DIR_PATH = './'

const chalk = require('chalk')
const fs = require('fs')
const path = require('path')
const program = require('commander')

const tasks = require('./tasks')
const lib = require('./lib')

program
  .option(
    '-t, --target <path>',
    `path to source folder, defaults to "${SOURCE_DIR_PATH}"`,
    SOURCE_DIR_PATH
  )
  .parse(process.argv)

const { target } = program

console.log(chalk.bold('clear generated files'))
console.log(`target=${chalk.blue(target)}`)

if (!fs.existsSync(target)) {
  console.error(chalk.red('Error: could not find source folder!'))
  process.exit(1)
}

const assetsDir = path.join(OUTPUT_DIR_PATH, 'assets')

console.log('')
console.log(chalk.bold('✓ delete assets folder'))

lib.remove(assetsDir)
  .then(() => {
    const viewSlugs = lib.getAllFolders(path.join(target, 'views')).map(views => {
      const splitted = views.split('/')
      return splitted[splitted.length - 1]
    })

    return Promise.all(
      viewSlugs.map(slug => {
        return new Promise((resolve, reject) => {
          console.log('')
          console.log(chalk.bold(`✓ delete "${slug}" view folder`))

          lib.remove(path.join(OUTPUT_DIR_PATH, slug))
            .then(() => {
              resolve()
            })
            .catch(err => {
              reject(err)
            })
        })
      })
    )
  })
  .then(() => {
    console.log('')
    console.log(chalk.bold('✓ delete index.html root file'))
    return lib.remove(path.join(OUTPUT_DIR_PATH, 'index.html'))
  })
  .then(() => {
    console.log('')
    console.log(chalk.blue('( ͡° ͜ʖ ͡°) done!'))
  })
  .catch((err) => {
    console.error(chalk.red(err))
    console.log('')
    console.error(chalk.red('Task failed!'))
  })
